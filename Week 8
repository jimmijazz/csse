class Student(object):
    """A very simple model of a university student"""
    def __init__(self, name, student_no):
        """Create a Student with a name and unique student number

        Constructor: Student(str, int)
        """
        self._name = name
        self._sno = student_no
        self._enrolments = []  # list of pairs (course code, tuition fee)

    def get_name(self):
        """ Returns the name of the student

        Student.get_name() -> str

        """
        return self._name

    def get_student_no(self):
        """ Returns the students student number

        Student.get_student_no() -> int

        """
        return self._sno

    def enrol(self, course_code, fee):
        """Enrol in a course, at a given fee.
        
        Student.enrol(str, int) -> None
        
        """
        self._enrolments.append((course_code, fee))

    def get_enrolments(self):
        """Return a list of courses the student is enrolled in.
        
        Student.get_enrolments() -> list<tuple<str, int>>
        
        """
        return self._enrolments

    def calculate_fees(self):
        """Compute the total tuition fees for the student.
        
        Student.calculate_fees() -> int
        
        """
        total = 0
        for course_code, fee in self._enrolments:
            total += fee
        return total


# Define your CollegeStudent class here
class CollegeStudent(Student):
    def __init__(self, name, student_no, college_name, college_fee):
        super().__init__(name, student_no)
        self._college_fee = college_fee
        self._college_name = college_name
        self._college_fee = college_fee

    def get_college(self):
        return self._college_fee

    def calculate_fees(self):
       uni_fees = super().calculate_fees()
       return uni_fees + self._college_fee

fred = CollegeStudent("fred", 43214321, "St. Leo's", 18000)
